{"version":3,"sources":["images/Rickandmortylogo.png","api/Api.js","components/CharacterFilter.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","App.js","index.js"],"names":["module","exports","getData","fetch","then","res","json","data","results","map","characters","id","name","species","image","status","origin","episode","length","catch","error","console","log","CharacterFilter","htmlFor","type","onChange","this","props","handleFilter","value","filter","React","Component","CharacterCard","className","key","to","src","alt","CharacterList","item","index","renderList","Home","CharacterDetail","routerProps","characterId","parseInt","match","params","character","find","Fragment","charactersFilter","App","state","rickandmorty","bind","setState","event","characterFilter","target","toUpperCase","includes","logo","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8a5c9bfb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rickandmortylogo.75509f2e.png\";","const getData = () => {\n  return fetch('./data.json')\n    .then(res => res.json())\n    .then(data => {\n      return data.results.map(characters => {\n        return {\n          id: characters.id,\n          name: characters.name,\n          species: characters.species,\n          image: characters.image,\n          status: characters.status,\n          origin: characters.origin.name,\n          episode: characters.episode.length\n        };\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport default getData;\n","import React from 'react';\n\nclass CharacterFilter extends React.Component {\n  render() {\n    return (\n      <div>\n        <label htmlFor='characterfilter'>\n          <input\n            type='text'\n            id='name'\n            name='name'\n            onChange={this.props.handleFilter}\n            value={this.props.filter}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default CharacterFilter;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterCard = props => {\n  return (\n    <li className='characters' key={props.characters.id}>\n      <Link\n        to={`/character__detail/${props.characters.id}`}\n        className='character__link'\n      >\n        <img src={props.characters.image} alt={props.characters.name} />\n        <div className='characters__card'>\n          <h2 className='characters__name'>{props.characters.name}</h2>\n          <p className='characters__specie'>{props.characters.species}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\n\nconst renderList = props => {\n  return props.characters.map((item, index) => {\n    return <CharacterCard key={index} characters={item} />;\n  });\n};\n\nconst CharacterList = props => {\n  return <ul className='character__list'>{renderList(props)}</ul>;\n};\n\nexport default CharacterList;\n","import React, { Fragment } from 'react';\nimport CharacterFilter from './CharacterFilter';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const { filter, handleFilter, characters } = props;\n\n  return (\n    <Fragment>\n      <CharacterFilter filter={filter} handleFilter={handleFilter} />\n      <CharacterList characters={characters} />\n    </Fragment>\n  );\n};\n\nHome.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n  const { routerProps, characters } = props;\n  const characterId = parseInt(routerProps.match.params.characterId);\n  const character = characters.find(item => item.id === characterId);\n\n  if (character) {\n    const { image, name, status, species, origin, episode } = character;\n    return (\n      <React.Fragment>\n        <div className='character__detail'>\n          <Link to='/' className='character__detail__link'>\n            Volver\n          </Link>\n\n          <div className='character__detail__wrap'>\n            <img src={image} alt={name} />\n            <ul className='character__detail__descriptions'>\n              <h2 className='character__detail__name'>{name}</h2>\n              <li className='character__detail__status'>\n                Status:{' '}\n                {`${status}` === 'Dead' ? `${status} 💀` : `${status} 😎`}\n              </li>\n              <li className='character__detail__species'>\n                Species:{' '}\n                {`${species}` === 'Alien' ? `${species} 🦹‍♂️` : `${species} 🙋🏻`}\n              </li>\n              <li className='character__detail__origin'>Origin: {origin}</li>\n              <li className='character__detail__episodes'>\n                Episodes: {episode}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Link to='/' className='app__back'>\n          Volver al listado\n        </Link>\n      </React.Fragment>\n    );\n  }\n};\n\nCharacterDetail.propTypes = {\n  routerProps: PropTypes.object.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport './App.css';\nimport getData from './api/Api';\nimport logo from './images/Rickandmortylogo.png';\nimport Home from './components/Home';\nimport CharacterDetail from './components/CharacterDetail';\nimport { Switch, Route } from 'react-router-dom';\n\nlet charactersFilter = [];\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\trickandmorty: [],\n\t\t\tfilter: ''\n\t\t};\n\t\tthis.handleFilter = this.handleFilter.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\tgetData().then(rickandmorty => {\n\t\t\tthis.setState({\n\t\t\t\trickandmorty: rickandmorty\n\t\t\t});\n\t\t});\n\t}\n\n\thandleFilter(event) {\n\t\tconst characterFilter = event.target.value;\n\t\tthis.setState({\n\t\t\tfilter: characterFilter\n\t\t});\n\t}\n\n\trender() {\n\t\tcharactersFilter = this.state.rickandmorty.filter(characters => {\n\t\t\treturn characters.name\n\t\t\t\t.toUpperCase()\n\t\t\t\t.includes(this.state.filter.toUpperCase());\n\t\t});\n\n\t\treturn (\n\t\t\t<div className='app'>\n\t\t\t\t<h1 className='title'>\n\t\t\t\t\t<img className='title__img' src={logo} alt='rickandmorty' />\n\t\t\t\t</h1>\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route\n\t\t\t\t\t\texact\n\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\trender={() => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Home\n\t\t\t\t\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\t\t\t\t\thandleFilter={this.handleFilter}\n\t\t\t\t\t\t\t\t\tcharacters={charactersFilter}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/character__detail/:characterId'\n\t\t\t\t\t\trender={routerProps => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CharacterDetail\n\t\t\t\t\t\t\t\t\trouterProps={routerProps}\n\t\t\t\t\t\t\t\t\tcharacters={charactersFilter}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}