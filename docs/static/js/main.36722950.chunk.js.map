{"version":3,"sources":["images/Rickandmortylogo.png","api/Api.js","components/CharacterFilter.js","components/CharacterCard.js","components/CharacterList.js","components/Home.js","components/CharacterDetail.js","App.js","index.js"],"names":["module","exports","getData","fetch","then","res","json","data","results","map","characters","id","name","species","image","status","origin","episode","length","catch","error","console","log","CharacterFilter","htmlFor","className","type","onChange","this","props","handleFilter","value","filter","React","Component","CharacterCard","key","to","src","alt","CharacterList","item","index","renderList","Home","CharacterDetail","routerProps","characterId","parseInt","match","params","character","Fragment","charactersFilter","App","state","rickandmorty","bind","setState","event","characterFilter","target","includes","logo","exact","path","render","ReactDOM","document","getElementById"],"mappings":"0HAAAA,EAAOC,QAAU,IAA0B,8C,wNCqB5BC,G,MArBC,WACd,OAAOC,MAAM,eACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,OAAOA,EAAKC,QAAQC,KAAI,SAAAC,GACtB,MAAO,CACLC,GAAID,EAAWC,GACfC,KAAMF,EAAWE,KACjBC,QAASH,EAAWG,QACpBC,MAAOJ,EAAWI,MAClBC,OAAQL,EAAWK,OACnBC,OAAQN,EAAWM,OAAOJ,KAC1BK,QAASP,EAAWO,QAAQC,cAIjCC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,Q,iBCIHG,E,iLAjBX,OACE,6BACE,2BAAOC,QAAQ,mBACb,wBAAIC,UAAU,0BAAd,uBACA,2BACEC,KAAK,OACLf,GAAG,OACHC,KAAK,OACLe,SAAUC,KAAKC,MAAMC,aACrBC,MAAOH,KAAKC,MAAMG,e,GAXAC,IAAMC,WCkBrBC,EAjBO,SAAAN,GACpB,OACE,wBAAIJ,UAAU,aAAaW,IAAKP,EAAMnB,WAAWC,IAC/C,kBAAC,IAAD,CACE0B,GAAE,6BAAwBR,EAAMnB,WAAWC,IAC3Cc,UAAU,mBAEV,yBAAKa,IAAKT,EAAMnB,WAAWI,MAAOyB,IAAKV,EAAMnB,WAAWE,OACxD,yBAAKa,UAAU,oBACb,wBAAIA,UAAU,oBAAoBI,EAAMnB,WAAWE,MACnD,uBAAGa,UAAU,sBAAsBI,EAAMnB,WAAWG,aCA/C2B,EAJO,SAAAX,GACpB,OAAO,wBAAIJ,UAAU,mBAPJ,SAAAI,GACjB,OAAOA,EAAMnB,WAAWD,KAAI,SAACgC,EAAMC,GACjC,OAAO,kBAAC,EAAD,CAAeN,IAAKM,EAAOhC,WAAY+B,OAKRE,CAAWd,KCYtCe,EAjBF,SAAAf,GAAU,IACbG,EAAqCH,EAArCG,OAAQF,EAA6BD,EAA7BC,aAAcpB,EAAemB,EAAfnB,WAE9B,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAiBsB,OAAQA,EAAQF,aAAcA,IAC/C,kBAAC,EAAD,CAAepB,WAAYA,MCqClBmC,EA5CS,SAAAhB,GAAU,IACxBiB,EAA4BjB,EAA5BiB,YAAapC,EAAemB,EAAfnB,WACfqC,EAAcC,SAASF,EAAYG,MAAMC,OAAOH,aAEhDI,EAAYzC,EAAWsB,QAAO,SAAAS,GAAI,OAAIA,EAAK9B,KAAOoC,KAExD,GAAII,EAAU,GAAI,CAAC,IAAD,EAC0CA,EAAU,GAA5DrC,EADQ,EACRA,MAAOF,EADC,EACDA,KAAMG,EADL,EACKA,OAAQF,EADb,EACaA,QAASG,EADtB,EACsBA,OAAQC,EAD9B,EAC8BA,QAC9C,OACE,kBAAC,IAAMmC,SAAP,KACE,yBAAK3B,UAAU,qBACb,kBAAC,IAAD,CAAMY,GAAG,IAAIZ,UAAU,2BAAvB,UAIA,yBAAKA,UAAU,2BACb,yBAAKa,IAAKxB,EAAOyB,IAAK3B,IACtB,wBAAIa,UAAU,mCACZ,wBAAIA,UAAU,2BAA2Bb,GACzC,wBAAIa,UAAU,4BAA4BV,GAC1C,wBAAIU,UAAU,8BAA8BZ,GAC5C,wBAAIY,UAAU,6BAA6BT,GAC3C,wBAAIS,UAAU,+BAA+BR,OAOvD,OACE,kBAAC,IAAMmC,SAAP,KACE,kBAAC,IAAD,CAAMf,GAAG,IAAIZ,UAAU,aAAvB,uB,OC3BJ4B,EAAmB,GAsERC,E,YAnEb,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,aAAc,GACdxB,OAAQ,IAEV,EAAKF,aAAe,EAAKA,aAAa2B,KAAlB,gBAPR,E,iFAUO,IAAD,OAClBvD,IAAUE,MAAK,SAAAoD,GACb,EAAKE,SAAS,CACZF,aAAcA,S,mCAKPG,GACX,IAAMC,EAAkBD,EAAME,OAAO9B,MACrCH,KAAK8B,SAAS,CACZ1B,OAAQ4B,M,+BAIF,IAAD,OAKP,OAJAP,EAAmBzB,KAAK2B,MAAMC,aAAaxB,QAAO,SAAAtB,GAChD,OAAOA,EAAWE,KAAKkD,SAAS,EAAKP,MAAMvB,WAI3C,yBAAKP,UAAU,OACb,wBAAIA,UAAU,SACZ,yBAAKa,IAAKyB,IAAMxB,IAAI,kBAGtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEyB,OAAK,EACLC,KAAK,IACLC,OAAQ,WACN,OACE,kBAAC,EAAD,CACElC,OAAQ,EAAKuB,MAAMvB,OACnBF,aAAc,EAAKA,aACnBpB,WAAY2C,OAKpB,kBAAC,IAAD,CACEY,KAAK,kCACLC,OAAQ,SAAApB,GACN,OACE,kBAAC,EAAD,CACEA,YAAaA,EACbpC,WAAY2C,a,GAzDZpB,IAAMC,WCJxBiC,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFE,SAASC,eAAe,W","file":"static/js/main.36722950.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rickandmortylogo.75509f2e.png\";","const getData = () => {\n  return fetch('./data.json')\n    .then(res => res.json())\n    .then(data => {\n      return data.results.map(characters => {\n        return {\n          id: characters.id,\n          name: characters.name,\n          species: characters.species,\n          image: characters.image,\n          status: characters.status,\n          origin: characters.origin.name,\n          episode: characters.episode.length\n        };\n      });\n    })\n    .catch(error => {\n      console.log(error);\n    });\n};\n\nexport default getData;\n","import React from 'react';\n\nclass CharacterFilter extends React.Component {\n  render() {\n    return (\n      <div>\n        <label htmlFor='characterfilter'>\n          <h3 className='characterfilter__title'>Escoge tu personaje</h3>\n          <input\n            type='text'\n            id='name'\n            name='name'\n            onChange={this.props.handleFilter}\n            value={this.props.filter}\n          />\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default CharacterFilter;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CharacterCard = props => {\n  return (\n    <li className='characters' key={props.characters.id}>\n      <Link\n        to={`/character__detail/${props.characters.id}`}\n        className='character__link'\n      >\n        <img src={props.characters.image} alt={props.characters.name} />\n        <div className='characters__card'>\n          <h2 className='characters__name'>{props.characters.name}</h2>\n          <p className='characters__specie'>{props.characters.species}</p>\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from './CharacterCard';\n\nconst renderList = props => {\n  return props.characters.map((item, index) => {\n    return <CharacterCard key={index} characters={item} />;\n  });\n};\n\nconst CharacterList = props => {\n  return <ul className='character__list'>{renderList(props)}</ul>;\n};\n\nexport default CharacterList;\n","import React, { Fragment } from 'react';\nimport CharacterFilter from './CharacterFilter';\nimport CharacterList from './CharacterList';\nimport PropTypes from 'prop-types';\n\nconst Home = props => {\n  const { filter, handleFilter, characters } = props;\n\n  return (\n    <Fragment>\n      <CharacterFilter filter={filter} handleFilter={handleFilter} />\n      <CharacterList characters={characters} />\n    </Fragment>\n  );\n};\n\nHome.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = props => {\n  const { routerProps, characters } = props;\n  const characterId = parseInt(routerProps.match.params.characterId);\n\n  const character = characters.filter(item => item.id === characterId);\n\n  if (character[0]) {\n    const { image, name, status, species, origin, episode } = character[0];\n    return (\n      <React.Fragment>\n        <div className='character__detail'>\n          <Link to='/' className='character__detail__link'>\n            Volver\n          </Link>\n\n          <div className='character__detail__wrap'>\n            <img src={image} alt={name} />\n            <ul className='character__detail__descriptions'>\n              <li className='character__detail__name'>{name}</li>\n              <li className='character__detail__staus'>{status}</li>\n              <li className='character__detail__species'>{species}</li>\n              <li className='character__detail__origin'>{origin}</li>\n              <li className='character__detail__episodes'>{episode}</li>\n            </ul>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Link to='/' className='app__back'>\n          Volver al listado\n        </Link>\n      </React.Fragment>\n    );\n  }\n};\n\nCharacterDetail.propTypes = {\n  routerProps: PropTypes.object.isRequired,\n  characters: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport './App.css';\nimport getData from './api/Api';\nimport logo from './images/Rickandmortylogo.png';\nimport Home from './components/Home';\nimport CharacterDetail from './components/CharacterDetail';\nimport { Switch, Route } from 'react-router-dom';\n\nlet charactersFilter = [];\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      rickandmorty: [],\n      filter: ''\n    };\n    this.handleFilter = this.handleFilter.bind(this);\n  }\n\n  componentDidMount() {\n    getData().then(rickandmorty => {\n      this.setState({\n        rickandmorty: rickandmorty\n      });\n    });\n  }\n\n  handleFilter(event) {\n    const characterFilter = event.target.value;\n    this.setState({\n      filter: characterFilter\n    });\n  }\n\n  render() {\n    charactersFilter = this.state.rickandmorty.filter(characters => {\n      return characters.name.includes(this.state.filter);\n    });\n\n    return (\n      <div className='app'>\n        <h1 className='title'>\n          <img src={logo} alt='rickandmorty' />\n        </h1>\n\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={() => {\n              return (\n                <Home\n                  filter={this.state.filter}\n                  handleFilter={this.handleFilter}\n                  characters={charactersFilter}\n                />\n              );\n            }}\n          />\n          <Route\n            path='/character__detail/:characterId'\n            render={routerProps => {\n              return (\n                <CharacterDetail\n                  routerProps={routerProps}\n                  characters={charactersFilter}\n                />\n              );\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}